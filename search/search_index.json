{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Computa\u00e7\u00e3o em Nuvem","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#kit-m","title":"KIT-M","text":"<p>Samuel Jabes</p> <p>Lucas Filizola</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 - Data 23/02/2025</li> <li> Roteiro 2 - Data 11/02/2025</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"roteiro1/main/","title":"Roteiro 1 - Cloud Computing","text":""},{"location":"roteiro1/main/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Este roteiro tem como principais objetivos:</p> <ul> <li>Entender os conceitos b\u00e1sicos sobre uma plataforma de gerenciamento de hardware</li> <li>Introduzir conceitos b\u00e1sicos sobre redes de computadores</li> </ul> <p>O Metal-as-a-Service (MaaS) \u00e9 uma solu\u00e7\u00e3o de gerenciamento de infraestrutura que trata servidores f\u00edsicos como m\u00e1quinas virtuais na nuvem. Ele permite provisionar, gerenciar e controlar servidores f\u00edsicos atrav\u00e9s de uma interface web amig\u00e1vel, tornando poss\u00edvel implantar sistemas operacionais rapidamente e gerenciar infraestruturas complexas de forma centralizada.</p>"},{"location":"roteiro1/main/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Realizar a leitura sobre o MaaS: [https://maas.io/]</li> <li>Familiaridade b\u00e1sica com conceitos de redes e virtualiza\u00e7\u00e3o</li> </ul>"},{"location":"roteiro1/main/#material-do-kit","title":"Material do Kit","text":"<p>O grupo contar\u00e1 com os seguintes itens:</p> <ul> <li>1 NUC (main) com 10GB e 1 SSD (120GB)</li> <li>1 NUC (server1) com 12GB e 1 SSD (120GB)</li> <li>1 NUC (server2) com 16GB e 2 SSD (120GB+120GB)</li> <li>3 NUCs (server3, server4 e server5) com 32GB e 2 SSD (120GB+120GB)</li> <li>1 Switch DLink DSG-1210-28 de 28 portas</li> <li>1 Roteador TP-Link TL-R470T+</li> </ul>"},{"location":"roteiro1/main/#configuracao-de-rede","title":"Configura\u00e7\u00e3o de Rede","text":"<p>Cada grupo tem \u00e0 disposi\u00e7\u00e3o um ponto de rede (cabo preto) com sa\u00edda para a rede interna da faculdade, e cada kit possui um IP de entrada que pode ser verificado no dashboard do roteador.</p>"},{"location":"roteiro1/main/#politica-de-senhas","title":"Pol\u00edtica de Senhas","text":"<p>Todas as senhas do sistema devem seguir o crit\u00e9rio:</p> <ul> <li>Utilizar a palavra 'cloud' + a letra do kit min\u00fascula</li> <li>Por exemplo: 'cloudz' para o kit Z</li> <li>Usar a mesma senha para todos os servi\u00e7os que exigem cadastramento</li> <li>N\u00c3O alterar nenhuma senha que j\u00e1 esteja pr\u00e9-cadastrada</li> </ul> <p>Para o nosso caso, as senhas eram <code>cloudm</code>.</p>"},{"location":"roteiro1/main/#parte-1-infraestrutura","title":"Parte 1: Infraestrutura","text":""},{"location":"roteiro1/main/#instalando-o-ubuntu","title":"Instalando o Ubuntu","text":"<p>Procure tutoriais de como instalar o Sistema Operacional Ubuntu server, utilize um pen drive para baixar a imagem e criar um pendrive para boot da instalacao.</p> <ul> <li>Instale o Ubuntu Server 22.04 LTS na NUC main:<ul> <li>hostname: main</li> <li>login: cloud</li> <li>senha: (cloud + letra do kit)</li> <li>IP fixo: 172.16.0.3</li> <li>Name Servers (DNS): 172.20.129.131</li> </ul> </li> </ul>"},{"location":"roteiro1/main/#instalando-o-maas","title":"Instalando o MaaS","text":"<ul> <li>O MAAS possui diversas vers\u00f5es, iremos utilizar a \"stable\" 3.5.3 link para visualizar o time line</li> <li>Verifique se consegue pingar '8.8.8.8'. Se n\u00e3o conseguir, descubra como rotear os pacotes corretamente.</li> <li>Verifique se consegue pingar 'www.google.com'. Se n\u00e3o conseguir, descubra como resolver as urls corretamente.</li> <li> <p><code>$ sudo apt update &amp;&amp; sudo apt upgrade -y</code></p> </li> <li> <p><code>$ sudo snap install maas --channel=3.5/stable</code></p> </li> <li> <p><code>$ sudo snap install maas-test-db</code></p> </li> </ul> <p>Para acessar nossa m\u00e1quina remotamente, fazemos o acesso utilizando o ssh.</p> <p><code>ssh cloud@172.16.0.3</code></p>"},{"location":"roteiro1/main/#configurando-o-maas","title":"Configurando o MaaS","text":"<ul> <li>Inicializando o MaaS:<ul> <li><code>$ sudo maas init region+rack --maas-url http://172.16.0.3:5240/MAAS --database-uri maas-test-db:///</code></li> <li><code>$ sudo maas createadmin</code></li> <li>use o login cloud</li> <li>use a senha padr\u00e3o da disciplina</li> <li>deixe a chave vazia</li> </ul> </li> <li>Gerando um par de chaves para autentica\u00e7\u00e3o.<ul> <li><code>$ ssh-keygen -t rsa</code></li> <li>use senha vazia dessa vez</li> <li><code>$ cat ./.ssh/id_rsa.pub</code></li> <li>copie a chave gerada</li> </ul> </li> </ul> <p>Primeiramente, precisamos entender onde o servi\u00e7o est\u00e1 rodando e fazer login.</p> <ol> <li> <p>Configure um DNS Forwarder com o DNS do Insper (DNS Externo que o seu roteador enxerga)</p> <ul> <li>Acesse <code>Settings &gt; DNS</code></li> <li>Coloque o DNS do Insper: <code>172.20.129.131</code></li> </ul> </li> <li> <p>Importe as imagens do Ubuntu</p> <ul> <li>Em <code>Configuration &gt; Images</code></li> <li>Selecione Ubuntu 22.04 LTS com arquitetura amd64</li> <li>Selecione Ubuntu 20.04 LTS com arquitetura amd64 (clique em \"Update Selection\")</li> <li>Clique em \"Continue\" sem mexer em \"Other Images\"</li> <li>Finalize com \"Save and Finish Setup\"</li> </ul> </li> <li> <p>Fa\u00e7a o upload da chave SSH</p> <ul> <li>Copie a chave p\u00fablica do seu terminal SSH</li> <li>Inclua todo o conte\u00fado, desde <code>ssh-rsa</code> at\u00e9 o final com <code>cloud@main</code></li> <li>Em Source, escolha \"Upload\"</li> </ul> </li> <li> <p>Configure os par\u00e2metros do kernel</p> <ul> <li>Em <code>Settings &gt; General</code></li> <li>Global Kernel Parameters: <code>net.ifnames=0</code> (sem espa\u00e7os)</li> </ul> </li> </ol>"},{"location":"roteiro1/main/#configuracao-do-dhcp","title":"Configura\u00e7\u00e3o do DHCP","text":"<ol> <li> <p>Habilite o DHCP na subrede pelo MaaS Controller</p> <ul> <li>Acesse <code>Subnets</code> no dashboard</li> <li>Clique em <code>VLAN</code> em \"untagged\"</li> <li>Selecione \"Configure DHCP\"</li> <li>Selecione o Rack controller como \"main\"</li> <li>Coloque a subnet criada (172.16.0.0/20)</li> <li>Clique em \"Configure DHCP\"</li> <li>Confirme clicando em \"OK\"</li> </ul> </li> <li> <p>Altere o Reserved Range</p> <ul> <li>Configure para iniciar em <code>172.16.11.1</code> e terminar em <code>172.16.14.255</code></li> <li>Este range ficou configurado como din\u00e2mico</li> </ul> </li> <li> <p>Configure o DNS da subnet</p> <ul> <li>Mantenha apontando para o DNS do Insper</li> <li>Acesse <code>Subnet &gt; IP subnet &gt; Edit</code></li> </ul> </li> <li> <p>Desabilite o DHCP no roteador</p> <ul> <li>Acesse o IP do roteador: <code>172.16.0.1</code></li> <li>Navegue at\u00e9 <code>Network &gt; LAN &gt; DHCP Server</code></li> <li>Altere o status para \"Disable\"</li> <li>Salve as altera\u00e7\u00f5es</li> </ul> </li> </ol>"},{"location":"roteiro1/main/#verificacao-da-saude-do-maas","title":"Verifica\u00e7\u00e3o da Sa\u00fade do MaaS","text":"<p>Confirme a sa\u00fade do sistema MaaS:</p> <ol> <li>Visite a p\u00e1gina \"Controllers\" na interface web (dashboard)</li> <li>Selecione o nome do controlador</li> <li>Certifique-se de que a p\u00e1gina mostre uma marca de sele\u00e7\u00e3o verde ao lado dos itens 'regiond' at\u00e9 'dhcpd'</li> </ol> <p></p>"},{"location":"roteiro1/main/#comissionamento-de-servidores","title":"Comissionamento de Servidores","text":"<ol> <li> <p>Cadastre os hosts (machines) dispon\u00edveis, do server1 at\u00e9 server5</p> <ul> <li>Altere a op\u00e7\u00e3o Power Type para Intel AMT e preencha conforme abaixo:</li> <li>MacAddress: utilize o que foi anotado anteriormente</li> <li>Senha: <code>CloudComp6s!</code></li> <li>IP do AMT: <code>172.16.15.X</code> (sendo X o id do server, por exemplo server1 = 172.16.15.1)</li> </ul> </li> <li> <p>As NUCs ir\u00e3o comissionar automaticamente via boot PXE na rede</p> </li> <li> <p>Verifica\u00e7\u00e3o das caracter\u00edsticas de hardware:</p> <ul> <li>Server1: Caracter\u00edsticas a serem observadas</li> <li>Server2: 248,1GB no storage e 32GB de RAM</li> <li>Server3: 248,1GB no storage e 31GB de RAM</li> <li>Server4: 240,1GB no storage e 32GB de RAM</li> <li>Server5: 240,1GB no storage e 32GB de RAM</li> </ul> </li> <li> <p>Confirme que todos os n\u00f3s aparecem com o status Ready</p> <ul> <li>Verifique se as caracter\u00edsticas de hardware (cpu, mem\u00f3ria, SSD e rede) foram detectadas corretamente</li> </ul> </li> </ol>"},{"location":"roteiro1/main/#adicionando-o-roteador-como-device","title":"Adicionando o Roteador como Device","text":"<ol> <li>Acesse <code>Devices &gt; Add Device</code></li> <li>Configure:<ul> <li>Device Name: Roteador</li> <li>MAC Address: utilize o endere\u00e7o do roteador</li> <li>Para encontrar o MAC Address acesse <code>Dashboard do Roteador &gt; Network &gt; MAC &gt; Current MAC Address</code> (na linha de LAN)</li> </ul> </li> <li>Clique em \"Save device\"</li> </ol>"},{"location":"roteiro1/main/#criando-ovs-bridge","title":"Criando OVS Bridge","text":"<p>Uma Open vSwitch (OVS) bridge reduz a necessidade de duas interfaces de rede f\u00edsicas.</p> <p>Para cada servidor, execute este procedimento:</p> <ol> <li>Acesse <code>Machines</code></li> <li>Selecione cada servidor individualmente</li> <li>Navegue at\u00e9 <code>Network</code></li> <li>Selecione a interface <code>eth0</code></li> <li>Clique em \"Create bridge\"</li> <li>Mude o nome para <code>br-ex</code></li> <li>Coloque Bride Type como <code>Open vSwitch (OVS)</code></li> <li>Sete o <code>Auto-Assign</code></li> <li>Clique em \"Save interface\"</li> </ol> <p>O nome da ponte ser\u00e1 referenciado em outras partes dos roteiros. Neste exemplo de nuvem, utilizamos uma \u00fanica VLAN n\u00e3o etiquetada.</p> <p></p>"},{"location":"roteiro1/main/#configurando-acesso-remoto","title":"Configurando Acesso Remoto","text":"<p>Vamos realizar um NAT para permitir o acesso externo da \"Rede Wi-fi Insper\" ao servidor MAIN.</p> <ol> <li> <p>Crie uma regra NAT para acesso SSH:</p> <ul> <li>Acesse <code>Dashboard do roteador &gt; Transmission &gt; NAT &gt; Virtual Servers &gt; Add</code></li> <li>Configure portas interna e externa como 22</li> <li>O IP \u00e9 o da NUC main: <code>172.16.0.3</code></li> <li>A rede <code>0.0.0.0/0</code> representa \"libere o acesso sempre\"</li> </ul> </li> <li> <p>Libere o acesso ao gerenciamento remoto do roteador:</p> <ul> <li>Acesse <code>Dashboard do Roteador &gt; System Tools &gt; Admin Setup &gt; Remote Management</code></li> <li>Configure o IP como <code>0.0.0.0/0</code></li> <li>Status: Enable</li> </ul> </li> <li> <p>Registre os IPs importantes:</p> <ul> <li>IP FIXO DO ROTEADOR (EXTERNO): <code>10.103.1.22</code> (IP que o Insper enxerga)</li> <li>IP INTERNO DO ROTEADOR: <code>172.16.0.1</code></li> </ul> </li> <li> <p>Crie uma regra NAT para o MaaS:</p> <ul> <li>Configure de forma similar ao SSH, mas usando a porta 5240</li> <li>IP continua sendo o da NUC main: <code>172.16.0.3</code></li> </ul> </li> </ol>"},{"location":"roteiro1/main/#enderecos-ip-relevantes","title":"Endere\u00e7os IP Relevantes","text":"<p>Para refer\u00eancia e configura\u00e7\u00f5es futuras, registre os seguintes endere\u00e7os:</p> Descri\u00e7\u00e3o Endere\u00e7o Observa\u00e7\u00e3o IP externo do roteador <code>10.103.1.22</code> IP fixo vis\u00edvel pela rede do Insper IP interno do roteador <code>172.16.0.1</code> Gateway da rede interna Porta do servi\u00e7o MaaS <code>5240</code> Porta fixa do servi\u00e7o IP da NUC main <code>172.16.0.3</code> Servidor principal <p>Ap\u00f3s estas configura\u00e7\u00f5es, \u00e9 poss\u00edvel acessar tanto o roteador quanto o servi\u00e7o MaaS a partir de qualquer ponto conectado \u00e0 rede do Insper, eliminando a necessidade de conex\u00e3o f\u00edsica direta. O roteador atua como intermedi\u00e1rio, redirecionando as requisi\u00e7\u00f5es externas para os servi\u00e7os internos apropriados.</p> <p>Agora \u00e9 poss\u00edvel acessar o roteador de qualquer lugar do Insper pelo seu IP externo.</p>"},{"location":"roteiro1/main/#parte-2-aplicacao","title":"Parte 2: Aplica\u00e7\u00e3o","text":""},{"location":"roteiro1/main/#django-em-nuvem-bare-metal","title":"Django em Nuvem Bare-Metal","text":""},{"location":"roteiro1/main/#ajuste-no-dns-server","title":"Ajuste no DNS Server","text":"<p>Antes de come\u00e7ar, realize um pequeno ajuste no DNS server:</p> <ol> <li>Dentro da aba Subnets, clique na subnet <code>172.16.0.0/20</code></li> <li>Edite a Subnet summary colocando o DNS do Insper: <code>172.20.129.131</code></li> </ol>"},{"location":"roteiro1/main/#implantacao-do-banco-de-dados-postgresql","title":"Implanta\u00e7\u00e3o do Banco de Dados (PostgreSQL)","text":"<ol> <li> <p>Acesse o Dashboard do MaaS e realize o deploy do Ubuntu 22.04 no server1</p> <ul> <li>Navegue at\u00e9 <code>Machines &gt; Server1 &gt; Actions &gt; Deploy &gt; Deploy Machine</code></li> </ul> </li> <li> <p>Acesse o terminal do server1 via SSH:    <pre><code>ssh ubuntu@172.16.15.13  # IP_DO_SERVER1\n</code></pre></p> </li> <li> <p>Instale o PostgreSQL:    <pre><code>sudo apt update\nsudo apt install postgresql postgresql-contrib -y\n</code></pre></p> </li> <li> <p>Crie um usu\u00e1rio para a aplica\u00e7\u00e3o:    <pre><code>sudo su - postgres\ncreateuser -s cloud -W\n# Use a senha: cloud\n</code></pre></p> </li> <li> <p>Crie um database para a aplica\u00e7\u00e3o:    <pre><code>createdb -O cloud tasks\n</code></pre></p> </li> <li> <p>Configure o PostgreSQL para aceitar conex\u00f5es remotas:    <pre><code>nano /etc/postgresql/16/main/postgresql.conf\n</code></pre></p> <ul> <li>Remova o coment\u00e1rio e substitua a linha para aceitar conex\u00f5es remotas:    <pre><code>listen_addresses = '*'\n</code></pre></li> </ul> </li> <li> <p>Configure o acesso:    <pre><code>nano /etc/postgresql/16/main/pg_hba.conf\n</code></pre></p> <ul> <li>Adicione a linha que libera m\u00e1quinas dentro da subnet do kit:    <pre><code>host    all    all    172.16.0.0/20    trust\n</code></pre></li> </ul> </li> <li> <p>Saia do usu\u00e1rio postgres com o comando <code>exit</code></p> </li> <li> <p>Libere o firewall:    <pre><code>sudo ufw allow 5432/tcp\n</code></pre></p> </li> <li> <p>Reinicie o servi\u00e7o:     <pre><code>sudo systemctl restart postgresql\n</code></pre></p> </li> </ol> <p>Tarefa-1</p> <p>Estude os comandos ping, ifconfig, systemctl, telnet, ufw, curl, wget e journalctl. Com estes comandos apresente prints das Telas  que provam que o banco de dados est\u00e1:</p> <pre><code>1. Funcionando e seu Status est\u00e1 como \"Ativo\" para o Sistema Operacional\n2. Acessivel na pr\u00f3pria maquina na qual ele foi implantado.\n3. Acessivel a partir de uma conex\u00e3o vinda da m\u00e1quina MAIN.\n4. Em qual porta este servi\u00e7o est\u00e1 funcionando.\n</code></pre>"},{"location":"roteiro1/main/#1-funcionando-e-seu-status-esta-como-ativo-para-o-sistema-operacional","title":"1. Funcionando e seu Status est\u00e1 como \"Ativo\" para o Sistema Operacional.","text":""},{"location":"roteiro1/main/#2-acessivel-na-propria-maquina-na-qual-ele-foi-implantado","title":"2. Acessivel na pr\u00f3pria maquina na qual ele foi implantado.","text":""},{"location":"roteiro1/main/#3-acessivel-a-partir-de-uma-conexao-vinda-da-maquina-main","title":"3. Acessivel a partir de uma conex\u00e3o vinda da m\u00e1quina MAIN.","text":""},{"location":"roteiro1/main/#4-em-qual-porta-este-servico-esta-funcionando","title":"4. Em qual porta este servi\u00e7o est\u00e1 funcionando.","text":""},{"location":"roteiro1/main/#implantacao-da-aplicacao-django","title":"Implanta\u00e7\u00e3o da Aplica\u00e7\u00e3o Django","text":"<ol> <li> <p>Volte ao MaaS e solicite uma m\u00e1quina via CLI:    <pre><code>maas login cloud http://172.16.0.3:5240/MAAS/\n</code></pre></p> <ul> <li>Busque o token no dashboard dentro das configura\u00e7\u00f5es do usu\u00e1rio: <code>Cloud &gt; API Keys</code></li> </ul> </li> <li> <p>Solicite a reserva da m\u00e1quina para o MaaS:    <pre><code>maas cloud machines allocate name=server2\n</code></pre></p> <ul> <li>Anote o system_id do JSON resultante (no nosso caso: <code>ew8g34</code>)</li> </ul> </li> <li> <p>Realize o deploy via linha de comando:    <pre><code>maas cloud machine deploy ew8g34\n</code></pre></p> </li> <li> <p>Ap\u00f3s o deploy, acesse o servidor via SSH (IP: <code>172.16.15.14</code>):    <pre><code>ssh ubuntu@172.16.15.14\n</code></pre></p> </li> <li> <p>Clone o reposit\u00f3rio da aplica\u00e7\u00e3o:    <pre><code>git clone https://github.com/raulikeda/tasks.git\ncd tasks/\n</code></pre></p> </li> <li> <p>Configure o banco de dados:</p> <ul> <li>Edite o arquivo de configura\u00e7\u00e3o do Django:    <pre><code>nano portfolio/settings.py\n</code></pre></li> <li>Altere a configura\u00e7\u00e3o do banco de dados para apontar para o IP do server1:    <pre><code>DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'nome_do_banco',\n        'USER': 'usuario',\n        'PASSWORD': 'senha',\n        'HOST': '172.16.15.13',  # IP do server1\n        'PORT': '5432',\n    }\n}\n</code></pre></li> <li>ou abra o arquivo     <pre><code>nano /etc/hosts\n</code></pre>    E adicione o endere\u00e7amento do server1 ao seu IP.</li> </ul> </li> <li> <p>Execute o script de instala\u00e7\u00e3o:    <pre><code>./install.sh\n</code></pre></p> </li> <li> <p>Reinicie o servidor:    <pre><code>sudo reboot\n</code></pre></p> </li> <li> <p>Teste o acesso ao servi\u00e7o:    <pre><code>wget http://172.16.15.14:8080/admin/\n</code></pre></p> </li> </ol> <p></p>"},{"location":"roteiro1/main/#criando-um-tunel-ssh-para-acesso-externo","title":"Criando um T\u00fanel SSH para Acesso Externo","text":"<p>Para acessar o servi\u00e7o no seu navegador:</p> <ol> <li> <p>Desconecte do SSH do MaaS com o comando <code>exit</code></p> </li> <li> <p>Reconecte criando um t\u00fanel SSH:    <pre><code>ssh cloud@10.103.1.22 -L 8001:172.16.15.7:8080\n</code></pre></p> </li> </ol> <p>Este comando cria um t\u00fanel do servi\u00e7o do server2 na porta 8080 para o seu localhost na porta 8001.</p> <ol> <li>Acesse no navegador: <code>http://localhost:8001/admin/</code></li> <li>Login Django: <code>cloud</code></li> <li>Senha Django: <code>cloud</code></li> </ol> <p></p> <p>Um t\u00fanel SSH \u00e9 uma conex\u00e3o segura que permite redirecionar dados de uma m\u00e1quina remota para sua m\u00e1quina local. Ele funciona como um \"canal secreto\" criptografado, protegendo a comunica\u00e7\u00e3o contra intercepta\u00e7\u00f5es.</p> <p>Tarefa-2</p> <p>De um print das Telas abaixo:</p> <pre><code>1. Do Dashboard do **MAAS** com as m\u00e1quinas.\n2. Da aba images, com as imagens sincronizadas.\n3. Da Aba de cada maquina(5x) mostrando os testes de hardware e commissioning com Status \"OK\"\n</code></pre>"},{"location":"roteiro1/main/#1-do-dashboard-do-maas-com-as-maquinas","title":"1. Do Dashboard do MAAS com as m\u00e1quinas.","text":""},{"location":"roteiro1/main/#2-da-aba-images-com-as-imagens-sincronizadas","title":"2. Da aba images, com as imagens sincronizadas.","text":""},{"location":"roteiro1/main/#3-da-aba-de-cada-maquina5x-mostrando-os-testes-de-hardware-e-commissioning-com-status-ok","title":"3. Da Aba de cada maquina(5x) mostrando os testes de hardware e commissioning com Status \"OK\"","text":""},{"location":"roteiro1/main/#implantacao-automatizada-com-ansible","title":"Implanta\u00e7\u00e3o Automatizada com Ansible","text":"<p>Para aumentar a disponibilidade da aplica\u00e7\u00e3o, vamos implementar uma segunda inst\u00e2ncia da aplica\u00e7\u00e3o Django:</p> <ol> <li> <p>Fa\u00e7a o deploy do Ubuntu 22.04 no server3 via dashboard do MaaS</p> </li> <li> <p>No SSH do main, instale o Ansible:    <pre><code>sudo apt install ansible\nwget https://raw.githubusercontent.com/raulikeda/tasks/master/tasks-install-playbook.yaml\n</code></pre></p> </li> <li> <p>Execute o playbook do Ansible:    <pre><code>ansible-playbook tasks-install-playbook.yaml --extra-vars server=172.16.15.15  # IP do server3\n</code></pre></p> </li> </ol> <p>A diferen\u00e7a entre a instala\u00e7\u00e3o manual e com Ansible \u00e9 que manualmente precisamos pedir uma m\u00e1quina ao MaaS, solicitar uma reserva, deployar e instalar via script, o que \u00e9 trabalhoso e n\u00e3o automatizado. Com o Ansible, realizamos a instala\u00e7\u00e3o de forma autom\u00e1tica, pois ele j\u00e1 \u00e9 um gerenciador de deploy - basta fornecer o arquivo YAML com os requisitos.</p>"},{"location":"roteiro1/main/#balanceamento-de-carga-com-proxy-reverso","title":"Balanceamento de Carga com Proxy Reverso","text":"<p>Para criar um ponto \u00fanico de entrada e distribuir a carga entre os servidores, vamos implementar um proxy reverso com Nginx:</p> <ol> <li> <p>Fa\u00e7a o deploy do Ubuntu no server4 via dashboard do MaaS</p> </li> <li> <p>Acesse o server4 via SSH e instale o Nginx:    <pre><code>sudo apt-get update\nsudo apt-get install nginx\n</code></pre></p> </li> <li> <p>Configure o m\u00f3dulo upstream:    <pre><code>sudo nano /etc/nginx/sites-available/default\n</code></pre></p> </li> <li> <p>Adicione a configura\u00e7\u00e3o de balanceamento de carga:    <pre><code>upstream backend {\n    server 172.16.15.7:8080;  # IP do server2\n    server 172.16.15.15:8080; # IP do server3\n}\n\nserver {\n    location / {\n        proxy_pass http://backend;\n    }\n}\n</code></pre></p> </li> <li> <p>Reinicie o Nginx:    <pre><code>sudo service nginx restart\n</code></pre></p> </li> <li> <p>Modifique a mensagem de cada servidor Django para identifica\u00e7\u00e3o:</p> </li> <li>Edite o arquivo <code>tasks/views.py</code> em cada servidor:    <pre><code>nano tasks/views.py\n</code></pre></li> <li> <p>Altere a mensagem para incluir o nome do servidor:    <pre><code>from django.shortcuts import render\nfrom django.http import HttpResponse\n\ndef index(request):\n    return HttpResponse(\"Hello, world. You're at the tasks index (on server2).\")  # ou server3\n</code></pre></p> </li> <li> <p>Edite o arquivo <code>urls.py</code> para customizar o path:    <pre><code>urlpatterns = [path('', views.index, name='index'),]\n</code></pre></p> </li> <li> <p>Teste o acesso ao proxy reverso, verificando que ele alterna entre os servidores.</p> </li> </ol> <p>Tarefa-5</p> <p>Teste o acesso, caso esteja tudo certo, fa\u00e7a a tarefa abaixo:</p> <pre><code>1. De um print da tela do Dashboard do MAAS com as 4 Maquinas e seus respectivos IPs.\n2. Altere o conte\u00fado da mensagem contida na fun\u00e7\u00e3o `index` do arquivo `tasks/views.py` de cada server para distinguir ambos os servers. \n3. Fa\u00e7a um `GET request` para o path que voce criou em urls.py para o Nginx e tire 2 prints das respostas de cada request, provando que voce est\u00e1 conectado ao server 4, que \u00e9 o Proxy Reverso e que ele bate cada vez em um server diferente server2 e server3.\n</code></pre>"},{"location":"roteiro1/main/#1-de-um-print-da-tela-do-dashboard-do-maas-com-as-4-maquinas-e-seus-respectivos-ips","title":"1. De um print da tela do Dashboard do MAAS com as 4 Maquinas e seus respectivos IPs.","text":""},{"location":"roteiro1/main/#2-altere-o-conteudo-da-mensagem-contida-na-funcao-index-do-arquivo-tasksviewspy-de-cada-server-para-distinguir-ambos-os-servers","title":"2. Altere o conte\u00fado da mensagem contida na fun\u00e7\u00e3o <code>index</code> do arquivo <code>tasks/views.py</code> de cada server para distinguir ambos os servers.","text":""},{"location":"roteiro1/main/#3-faca-um-get-request-para-o-path-que-voce-criou-em-urlspy-para-o-nginx-e-tire-2-prints-das-respostas-de-cada-request-provando-que-voce-esta-conectado-ao-server-4-que-e-o-proxy-reverso-e-que-ele-bate-cada-vez-em-um-server-diferente-server2-e-server3","title":"3. Fa\u00e7a um <code>GET request</code> para o path que voce criou em urls.py para o Nginx e tire 2 prints das respostas de cada request, provando que voce est\u00e1 conectado ao server 4, que \u00e9 o Proxy Reverso e que ele bate cada vez em um server diferente server2 e server3.","text":""},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>Neste roteiro, configuramos com sucesso:</p> <ol> <li>Um controlador MaaS para gerenciar nossa infraestrutura bare-metal</li> <li>Uma rede com DHCP controlado pelo MaaS</li> <li>Um servidor de banco de dados PostgreSQL</li> <li>Duas inst\u00e2ncias de uma aplica\u00e7\u00e3o Django</li> <li>Um balanceador de carga com Nginx para distribuir o tr\u00e1fego</li> </ol>"},{"location":"roteiro2/main/","title":"Roteiro 2 - Juju","text":""},{"location":"roteiro2/main/#deployment-orchestration","title":"Deployment Orchestration","text":""},{"location":"roteiro2/main/#criando-infraestrutura-para-deploy-com-juju","title":"Criando infraestrutura para deploy com Juju","text":"<p>O Ansible \u00e9 eficaz para gerenciar instala\u00e7\u00e3o e configura\u00e7\u00e3o de n\u00f3s j\u00e1 provisionados, mas n\u00e3o realiza provisionamento direto com o MAAS (gerenciador de Bare Metal). Para montar nossa Cloud Privada, vamos utilizar o Juju, que se integra diretamente com o MAAS.</p>"},{"location":"roteiro2/main/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Verifique se todas as m\u00e1quinas (server1, server2, server3, server4 e server5) est\u00e3o com status Ready no MAAS.</li> <li>Fa\u00e7a o release das m\u00e1quinas utilizadas anteriormente com Django e Postgres, se necess\u00e1rio.</li> </ul>"},{"location":"roteiro2/main/#instalacao-do-juju","title":"Instala\u00e7\u00e3o do Juju","text":"<p>No n\u00f3 principal (<code>main</code>), execute:</p> <pre><code>sudo snap install juju --channel 3.6\n</code></pre>"},{"location":"roteiro2/main/#verificacao-e-adicao-do-maas-como-provedor","title":"Verifica\u00e7\u00e3o e Adi\u00e7\u00e3o do MAAS como Provedor","text":"<p>Verifique se o MAAS j\u00e1 est\u00e1 listado como provedor:</p> <pre><code>juju clouds\n</code></pre> <p>Caso n\u00e3o esteja, crie o arquivo <code>maas-cloud.yaml</code> com a defini\u00e7\u00e3o do provedor (verifique o endpoint do seu ambiente!):</p> <pre><code>clouds:\n  maas-one:\n    type: maas\n    auth-types: [oauth1]\n    endpoint: http://192.168.0.3:5240/MAAS/\n</code></pre> <p>Adicione a cloud:</p> <pre><code>juju add-cloud --client -f maas-cloud.yaml maas-one\n</code></pre>"},{"location":"roteiro2/main/#adicionando-credenciais-maas","title":"Adicionando credenciais MAAS","text":"<p>Crie o arquivo <code>maas-creds.yaml</code>:</p> <pre><code>credentials:\n  maas-one:\n    anyuser:\n      auth-type: oauth1\n      maas-oauth: &lt;API_KEY&gt;\n</code></pre> <p>Substitua <code>&lt;API_KEY&gt;</code> pela sua chave de acesso do MAAS.</p> <p>Adicione as credenciais:</p> <pre><code>juju add-credential --client -f maas-creds.yaml maas-one\n</code></pre>"},{"location":"roteiro2/main/#criando-o-modelo-openstack","title":"Criando o modelo OpenStack","text":"<pre><code>juju add-model --config default-series=jammy openstack\n</code></pre>"},{"location":"roteiro2/main/#parte-do-app","title":"Parte do App","text":""},{"location":"roteiro2/main/#utilizando-a-infraestrutura-bare-metal-com-o-juju","title":"Utilizando a infraestrutura Bare Metal com o Juju","text":"<p>Vamos utilizar o Juju para fazer o deploy da seguinte arquitetura:</p> <ul> <li>Grafana com Prometheus</li> </ul>"},{"location":"roteiro2/main/#instalando-o-dashboard-do-juju","title":"Instalando o Dashboard do Juju","text":"<p>Instale o dashboard:</p> <pre><code>juju deploy juju-dashboard dashboard --to lxd:0\njuju integrate dashboard controller\njuju expose dashboard\njuju dashboard\n</code></pre> <p>Sa\u00edda esperada:</p> <pre><code>Dashboard for controller \"maas-controller\" is enabled at:\n  http://localhost:31666\nYour login credential is:\n  username: admin\n  password: &lt;senha&gt;\n</code></pre>"},{"location":"roteiro2/main/#acessando-o-dashboard-remotamente","title":"Acessando o dashboard remotamente","text":"<p>Fa\u00e7a um t\u00fanel SSH para acessar o dashboard a partir do seu navegador:</p> <pre><code>ssh cloud@10.103.1.22 -L 31666:172.16.15.18:8080\n</code></pre>"},{"location":"roteiro2/main/#alternando-entre-modelos","title":"Alternando entre modelos","text":"<p>Verifique os modelos existentes:</p> <pre><code>juju models\n</code></pre> <p>Mude para o modelo de aplica\u00e7\u00f5es:</p> <pre><code>juju switch openstack\n</code></pre> <p>Volte para o controlador:</p> <pre><code>juju switch maas-controller:admin/maas\n</code></pre>"},{"location":"roteiro2/main/#deploy-do-grafana-e-prometheus","title":"Deploy do Grafana e Prometheus","text":"<p>O Grafana \u00e9 uma plataforma open-source para visualiza\u00e7\u00e3o de dados. Neste caso, ele ser\u00e1 integrado ao Prometheus, que funcionar\u00e1 como seu banco de dados.</p>"},{"location":"roteiro2/main/#baixando-os-charms","title":"Baixando os charms","text":"<p>Crie uma pasta para os charms:</p> <pre><code>mkdir -p ~/charms\ncd ~/charms\n</code></pre> <p>Baixe os charms:</p> <pre><code>juju download grafana\njuju download prometheus2\n</code></pre>"},{"location":"roteiro2/main/#realizando-o-deploy","title":"Realizando o Deploy","text":"<pre><code>juju deploy ./prometheus2_r60.charm\njuju deploy ./grafana_r69.charm --base ubuntu@20.04\n</code></pre> <p>Acompanhe o status:</p> <pre><code>watch -n 1 --color \"juju status --color\"\n</code></pre>"},{"location":"roteiro2/main/#integracao-do-grafana-com-prometheus","title":"Integra\u00e7\u00e3o do Grafana com Prometheus","text":"<p>Siga a documenta\u00e7\u00e3o oficial do charm do Grafana para integra\u00e7\u00e3o:</p> <pre><code>juju integrate grafana:grafana-source prometheus2:grafana-source\n</code></pre> <p>Acesse o dashboard do Grafana e verifique se o Prometheus est\u00e1 listado como source. Crie um dashboard com uma visualiza\u00e7\u00e3o para confirmar a integra\u00e7\u00e3o.</p>"},{"location":"roteiro2/main/#tarefas","title":"Tarefas","text":"<p>Tarefa</p> <ol> <li>Print do Dashboard do MAAS com as m\u00e1quinas e seus respectivos IPs.</li> <li>Print do comando <code>juju status</code> com o Grafana ativo.</li> <li>Print do Dashboard do Grafana mostrando o Prometheus como source.</li> <li>Prova (print) de acesso ao Dashboard via rede do Insper.</li> <li>Print da tela do Dashboard Juju com as aplica\u00e7\u00f5es em execu\u00e7\u00e3o: <code>http://&lt;IP-Servi\u00e7o&gt;:8080/models/admin/maas</code></li> </ol>"},{"location":"roteiro2/main/#1-print-do-dashboard-do-maas-com-as-maquinas-e-seus-respectivos-ips","title":"1. Print do Dashboard do MAAS com as m\u00e1quinas e seus respectivos IPs.","text":""},{"location":"roteiro2/main/#2-print-do-comando-juju-status-com-o-grafana-ativo","title":"2. Print do comando <code>juju status</code> com o Grafana ativo.","text":""},{"location":"roteiro2/main/#3-print-do-dashboard-do-grafana-mostrando-o-prometheus-como-source","title":"3. Print do Dashboard do Grafana mostrando o Prometheus como source","text":""},{"location":"roteiro2/main/#4-prova-print-de-acesso-ao-dashboard-via-rede-do-insper","title":"4. Prova (print) de acesso ao Dashboard via rede do Insper.","text":""},{"location":"roteiro2/main/#5-print-da-tela-do-dashboard-juju-com-as-aplicacoes-em-execucao-httpip-servico8080modelsadminmaas","title":"5. Print da tela do Dashboard Juju com as aplica\u00e7\u00f5es em execu\u00e7\u00e3o: <code>http://&lt;IP-Servi\u00e7o&gt;:8080/models/admin/maas</code>","text":""},{"location":"roteiro2/main/#_1","title":"Roteiro 2","text":""},{"location":"roteiro2/main/#limpeza-de-ambiente","title":"Limpeza de Ambiente","text":"<p>Execute os comandos abaixo para destruir o ambiente:</p> <pre><code>juju destroy-model openstack\njuju destroy-controller maas-controller\n</code></pre> <p>Em cada servidor:</p> <p>Navegue at\u00e9 <code>Network &gt; Create Bridge</code> e configure com:</p> <ul> <li>Nome: <code>br-ex</code></li> <li>Tipo: <code>OVS</code></li> <li>VLAN: habilitado</li> <li>IP Mode: DHCP</li> </ul>"},{"location":"roteiro3/main/","title":"Roteiro 3","text":""},{"location":"roteiro3/main/#objetivo","title":"Objetivo","text":"<p>Aqui vai o objetivo macro do roteiro. Por que estamos fazendo o que estamos fazendo?</p>"},{"location":"roteiro3/main/#montagem-do-roteiro","title":"Montagem do Roteiro","text":"<p>Os pontos \"tarefas\" s\u00e3o os passos que devem ser seguidos para a realiza\u00e7\u00e3o do roteiro. Eles devem ser claros e objetivos. Com evid\u00eancias claras de que foram realizados.</p>"},{"location":"roteiro3/main/#tarefa-1","title":"Tarefa 1","text":"<p>Instalando o MAAS:</p> sudo snap install maas --channel=3.5/Stable <p></p> <p>Dashboard do MAAS</p> <p>Conforme ilustrado acima, a tela inicial do MAAS apresenta um dashboard com informa\u00e7\u00f5es sobre o estado atual dos servidores gerenciados. O dashboard \u00e9 composto por diversos pain\u00e9is, cada um exibindo informa\u00e7\u00f5es sobre um aspecto espec\u00edfico do ambiente gerenciado. Os pain\u00e9is podem ser configurados e personalizados de acordo com as necessidades do usu\u00e1rio.</p>"},{"location":"roteiro3/main/#tarefa-2","title":"Tarefa 2","text":""},{"location":"roteiro3/main/#app","title":"App","text":""},{"location":"roteiro3/main/#tarefa-1_1","title":"Tarefa 1","text":""},{"location":"roteiro3/main/#tarefa-2_1","title":"Tarefa 2","text":"<p>Exemplo de diagrama</p> <pre><code>architecture-beta\n    group api(cloud)[API]\n\n    service db(database)[Database] in api\n    service disk1(disk)[Storage] in api\n    service disk2(disk)[Storage] in api\n    service server(server)[Server] in api\n\n    db:L -- R:server\n    disk1:T -- B:server\n    disk2:T -- B:db</code></pre> <p>Mermaid</p>"},{"location":"roteiro3/main/#questionario-projeto-ou-plano","title":"Question\u00e1rio, Projeto ou Plano","text":"<p>Esse se\u00e7\u00e3o deve ser preenchida apenas se houver demanda do roteiro.</p>"},{"location":"roteiro3/main/#discussoes","title":"Discuss\u00f5es","text":"<p>Quais as dificuldades encontradas? O que foi mais f\u00e1cil? O que foi mais dif\u00edcil?</p>"},{"location":"roteiro3/main/#conclusao","title":"Conclus\u00e3o","text":"<p>O que foi poss\u00edvel concluir com a realiza\u00e7\u00e3o do roteiro?</p>"}]}